{"ast":null,"code":"var _jsxFileName = \"/Users/melony/Desktop/react-travel/src/pages/register/RegisterForm.tsx\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport styles from './RegisterForm.module.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = () => {\n  var _s = $RefreshSig$();\n\n  const onFinish = async values => {\n    _s();\n\n    console.log('Success:', values);\n    const history = useHistory();\n\n    try {\n      await axios.post('http://123.56.149.216:8080/auth/register', {\n        email: values.username,\n        password: values.password,\n        confirmPassword: values.confirm\n      });\n      history.push('/signIn/');\n    } catch (error) {\n      if (error instanceof Error) {\n        alert(\"register failed\");\n      }\n    }\n  };\n\n  _s(onFinish, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    className: styles['register-form'],\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Confirm Password\",\n      name: \"Confirm\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue(\"password\") === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(\"password not indentical !\");\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/pages/register/RegisterForm.tsx"],"names":["Form","Input","Button","Checkbox","styles","axios","useHistory","RegisterForm","onFinish","values","console","log","history","post","email","username","password","confirmPassword","confirm","push","error","Error","alert","onFinishFailed","errorInfo","span","remember","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","offset"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox } from 'antd';\nimport styles from './RegisterForm.module.css';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nexport const RegisterForm = () => {\n  const onFinish = async (values: any) => {\n    console.log('Success:', values);\n    const history = useHistory();\n    try{\n    await axios.post('http://123.56.149.216:8080/auth/register',{\n        email: values.username,\n        password: values.password,\n        confirmPassword: values.confirm\n    });\n    history.push('/signIn/')\n}catch (error) {\n    if(error instanceof Error) {\n        alert(\"register failed\")\n    }\n}\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n      className={styles['register-form']}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' },\n     \n    ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Confirm Password\"\n        name=\"Confirm\"\n        hasFeedback\n        rules={[{ required: true, message: 'Please confirm your password!' },\n        (({getFieldValue})=> ({\n            validator(_,value) {\n                if(!value || getFieldValue(\"password\")===value) {\n                    return Promise.resolve()\n                }\n                return Promise.reject(\"password not indentical !\");\n            }\n        }))\n    ]}\n      >\n        <Input.Password />\n      </Form.Item>\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};"]},"metadata":{},"sourceType":"module"}