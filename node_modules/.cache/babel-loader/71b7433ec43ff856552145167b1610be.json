{"ast":null,"code":"import languageReducer from './language/languageReducer';\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { ProductDetailSlice } from './productDetail/slice';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nconst rootReducer = combineReducers({\n  language: languageReducer,\n  recommendProducts: recommendProductsReducer,\n  productDetail: ProductDetailSlice.reducer\n}); //const store = createStore(rootReducer, applyMiddleware(thunk,actionLog));\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), actionLog],\n  devTools: true\n});\nexport default store;","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/redux/store.ts"],"names":["languageReducer","recommendProductsReducer","actionLog","ProductDetailSlice","combineReducers","configureStore","rootReducer","language","recommendProducts","productDetail","reducer","store","middleware","getDefaultMiddleware","devTools"],"mappings":"AACA,OAAOA,eAAP,MAA6B,4BAA7B;AACA,OAAOC,wBAAP,MAAqC,8CAArC;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,MAAMC,WAAW,GAAGF,eAAe,CAAC;AAChCG,EAAAA,QAAQ,EAACP,eADuB;AAEhCQ,EAAAA,iBAAiB,EAAEP,wBAFa;AAGhCQ,EAAAA,aAAa,EAAEN,kBAAkB,CAACO;AAHF,CAAD,CAAnC,C,CAKA;;AACA,MAAMC,KAAK,GAAEN,cAAc,CAAC;AACxBK,EAAAA,OAAO,EAAEJ,WADe;AAExBM,EAAAA,UAAU,EAAGC,oBAAD,IACR,CAAC,GAAGA,oBAAoB,EAAxB,EAA2BX,SAA3B,CAHoB;AAKxBY,EAAAA,QAAQ,EAAC;AALe,CAAD,CAA3B;AAQA,eAAeH,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport languageReducer from  './language/languageReducer';\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport thunk from 'redux-thunk';\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { ProductDetailSlice } from './productDetail/slice';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nconst rootReducer = combineReducers({\n    language:languageReducer,\n    recommendProducts: recommendProductsReducer,\n    productDetail: ProductDetailSlice.reducer\n});\n//const store = createStore(rootReducer, applyMiddleware(thunk,actionLog));\nconst store= configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => \n        [...getDefaultMiddleware(),actionLog]\n    ,\n    devTools:true\n})\nexport type RootState = ReturnType <typeof store.getState>\nexport default store;"]},"metadata":{},"sourceType":"module"}