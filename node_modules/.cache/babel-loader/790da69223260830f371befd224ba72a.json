{"ast":null,"code":"import styles from'./SignInForm.module.css';import{Form,Input,Button,Checkbox}from'antd';import{signIn}from'../../redux/user/slice';import{useDispatch}from'react-redux';import{useSelector}from'../../redux/hooks';import{useEffect}from'react';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SignInForm=function SignInForm(){var loading=useSelector(function(state){return state.user.loading;});var error=useSelector(function(state){return state.user.error;});var jwt=useSelector(function(state){return state.user.token;});var dispatch=useDispatch();var history=useHistory();useEffect(function(){if(jwt!==null){history.push(\"/\");}},[jwt]);var onFinish=function onFinish(values){console.log('Success:',values);dispatch(signIn({email:values.username,password:values.password}));};var onFinishFailed=function onFinishFailed(errorInfo){console.log('Failed:',errorInfo);};return/*#__PURE__*/_jsxs(Form,{name:\"basic\",labelCol:{span:8},wrapperCol:{span:16},initialValues:{remember:true},onFinish:onFinish,onFinishFailed:onFinishFailed,autoComplete:\"off\",className:styles[\"signin-form\"],children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Username\",name:\"username\",rules:[{required:true,message:'Please input your username!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Password\",name:\"password\",rules:[{required:true,message:'Please input your password!'}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"remember\",valuePropName:\"checked\",wrapperCol:{offset:8,span:16},children:/*#__PURE__*/_jsx(Checkbox,{children:\"Remember me\"})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:8,span:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",loading:loading,children:\"Submit\"})})]});};","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/pages/signIn/SignInForm.tsx"],"names":["styles","Form","Input","Button","Checkbox","signIn","useDispatch","useSelector","useEffect","useHistory","SignInForm","loading","state","user","error","jwt","token","dispatch","history","push","onFinish","values","console","log","email","username","password","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import styles from './SignInForm.module.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { signIn } from '../../redux/user/slice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from '../../redux/hooks';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nexport const SignInForm = () => {\n    const loading = useSelector(state=> state.user.loading);\n    const error = useSelector(state => state.user.error);\n    const jwt = useSelector(state => state.user.token);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(()=>{\n        if(jwt!== null){\n            history.push(\"/\")\n        }\n    },[jwt])\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n    dispatch(signIn({\n        email: values.username,\n        password: values.password\n    }))\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n      className={styles[\"signin-form\"]}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};"]},"metadata":{},"sourceType":"module"}