{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  loading: true,\n  error: null,\n  data: null\n};\nexport const getProductDetail = createAsyncThunk(\"productDetail/getProductDetail\", async (touristRouteId, thunkAPI) => {\n  thunkAPI.dispatch(ProductDetailSlice.actions.fetchStart);\n\n  try {\n    const {\n      data\n    } = await axios.get(`http://123.56.149.216:8080/api/touristRoutes/${touristRouteId}`);\n    thunkAPI.dispatch(ProductDetailSlice.actions.fetchSuccess(data));\n  } catch (err) {\n    if (err instanceof Error) {\n      thunkAPI.dispatch(ProductDetailSlice.actions.fetchFail(err.message));\n    }\n  }\n});\nexport const ProductDetailSlice = createSlice({\n  name: \"productDetail\",\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      state.loading = true;\n    },\n    fetchSuccess: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n    },\n    fetchFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/redux/productDetail/slice.ts"],"names":["createSlice","createAsyncThunk","axios","initialState","loading","error","data","getProductDetail","touristRouteId","thunkAPI","dispatch","ProductDetailSlice","actions","fetchStart","get","fetchSuccess","err","Error","fetchFail","message","name","reducers","state","action","payload"],"mappings":"AAAA,SAASA,WAAT,EAAqCC,gBAArC,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAOA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,OAAO,EAAE,IAD4B;AAErCC,EAAAA,KAAK,EAAE,IAF8B;AAGrCC,EAAAA,IAAI,EAAE;AAH+B,CAAzC;AAOA,OAAO,MAAMC,gBAAgB,GAAGN,gBAAgB,CAC5C,gCAD4C,EAE5C,OAAOO,cAAP,EAA+BC,QAA/B,KAA2C;AACvCA,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BC,UAA7C;;AAEI,MAAG;AACC,UAAK;AAACP,MAAAA;AAAD,QAAQ,MAAMJ,KAAK,CAACY,GAAN,CAAW,gDAA+CN,cAAe,EAAzE,CAAnB;AACFC,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BG,YAA3B,CAAwCT,IAAxC,CAAlB;AACD,GAHD,CAGC,OAAMU,GAAN,EAAW;AACR,QAAGA,GAAG,YAAYC,KAAlB,EAAyB;AACrBR,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,kBAAkB,CAACC,OAAnB,CAA2BM,SAA3B,CAAqCF,GAAG,CAACG,OAAzC,CAAlB;AACH;AACJ;AACR,CAb2C,CAAzC;AAeP,OAAO,MAAMR,kBAAkB,GAAGX,WAAW,CAAC;AAC1CoB,EAAAA,IAAI,EAAE,eADoC;AAE1CjB,EAAAA,YAF0C;AAG1CkB,EAAAA,QAAQ,EAAE;AACNR,IAAAA,UAAU,EAAGS,KAAD,IAAU;AAClBA,MAAAA,KAAK,CAAClB,OAAN,GAAe,IAAf;AACH,KAHK;AAINW,IAAAA,YAAY,EAAE,CAACO,KAAD,EAAQC,MAAR,KAAiB;AAC3BD,MAAAA,KAAK,CAAClB,OAAN,GAAgB,KAAhB;AACAkB,MAAAA,KAAK,CAAChB,IAAN,GAAaiB,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACjB,KAAN,GAAc,IAAd;AACH,KARK;AASNa,IAAAA,SAAS,EAAE,CAACI,KAAD,EAAQC,MAAR,KAAgD;AAEvDD,MAAAA,KAAK,CAAClB,OAAN,GAAgB,KAAhB;AACAkB,MAAAA,KAAK,CAACjB,KAAN,GAAakB,MAAM,CAACC,OAApB;AACH;AAbK;AAHgC,CAAD,CAAtC","sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\ninterface ProductDetailState {\n    loading: boolean,\n    error: string | null,\n    data: any\n}\n\nconst initialState: ProductDetailState = {\n    loading: true,\n    error: null,\n    data: null\n\n}\n\nexport const getProductDetail = createAsyncThunk(\n    \"productDetail/getProductDetail\",\n    async (touristRouteId: string, thunkAPI)=> {\n        thunkAPI.dispatch(ProductDetailSlice.actions.fetchStart);\n           \n            try{\n                const{data}= await axios.get(`http://123.56.149.216:8080/api/touristRoutes/${touristRouteId}`);\n              thunkAPI.dispatch(ProductDetailSlice.actions.fetchSuccess(data));\n            }catch(err) {\n                if(err instanceof Error) {\n                    thunkAPI.dispatch(ProductDetailSlice.actions.fetchFail(err.message))\n                }\n            }\n    }\n)\nexport const ProductDetailSlice = createSlice({\n    name: \"productDetail\",\n    initialState,\n    reducers: {\n        fetchStart: (state)=> {\n            state.loading= true;\n        },\n        fetchSuccess: (state, action)=>{\n            state.loading = false;\n            state.data = action.payload;\n            state.error = null\n        },\n        fetchFail: (state, action: PayloadAction<string | null>)=> {\n           \n            state.loading = false;\n            state.error= action.payload\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}