{"ast":null,"code":"var _jsxFileName = \"/Users/melony/Desktop/react \\u53BB\\u54EA\\u9879\\u76EE/react-travel/src/pages/signIn/SignInForm.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from './SignInForm.module.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { signIn } from '../../redux/user/slice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from '../../redux/hooks';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignInForm = () => {\n  _s();\n\n  const loading = useSelector(state => state.user.loading);\n  const error = useSelector(state => state.user.error);\n  const jwt = useSelector(state => state.user.token);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (jwt !== null) {\n      history.push(\"/\");\n    }\n  }, [jwt]);\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    dispatch(signIn({\n      email: values.username,\n      password: values.password\n    }));\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    className: styles[\"signin-form\"],\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInForm, \"+VHl4dD0yCSQWAfEmobu1kaBWzM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/Users/melony/Desktop/react 去哪项目/react-travel/src/pages/signIn/SignInForm.tsx"],"names":["styles","Form","Input","Button","Checkbox","signIn","useDispatch","useSelector","useEffect","useHistory","SignInForm","loading","state","user","error","jwt","token","dispatch","history","push","onFinish","values","console","log","email","username","password","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import styles from './SignInForm.module.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { signIn } from '../../redux/user/slice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from '../../redux/hooks';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nexport const SignInForm = () => {\n    const loading = useSelector(state=> state.user.loading);\n    const error = useSelector(state => state.user.error);\n    const jwt = useSelector(state => state.user.token);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(()=>{\n        if(jwt!== null){\n            history.push(\"/\")\n        }\n    },[jwt])\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n    dispatch(signIn({\n        email: values.username,\n        password: values.password\n    }))\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n      className={styles[\"signin-form\"]}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};"]},"metadata":{},"sourceType":"module"}