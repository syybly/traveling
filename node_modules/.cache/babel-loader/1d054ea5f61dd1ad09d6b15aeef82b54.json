{"ast":null,"code":"import _toConsumableArray from\"/Users/melony/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/melony/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import i18n from'i18next';var defaultState={language:\"en\",languageList:[{name:\"中文\",code:\"zh\"},{name:\"English\",code:\"en\"}]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"change_language\":i18n.changeLanguage(action.payload);var newState=_objectSpread(_objectSpread({},state),{},{language:action.payload});return newState;case\"add_language\":var newState2=_objectSpread(_objectSpread({},state),{},{languageList:[].concat(_toConsumableArray(state.languageList),[action.payload])});return newState2;default:return state;}});","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/redux/language/languageReducer.ts"],"names":["i18n","defaultState","language","languageList","name","code","state","action","type","changeLanguage","payload","newState","newState2"],"mappings":"yTAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CAKA,GAAMC,CAAAA,YAA2B,CAAG,CAChCC,QAAQ,CAAE,IADsB,CAEhCC,YAAY,CAAE,CACV,CAACC,IAAI,CAAC,IAAN,CAAYC,IAAI,CAAC,IAAjB,CADU,CAEV,CAACD,IAAI,CAAC,SAAN,CAAiBC,IAAI,CAAC,IAAtB,CAFU,CAFkB,CAApC,CAQA,eAAe,UAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BL,YAA0B,IAAXM,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,iBAAL,CACIR,IAAI,CAACS,cAAL,CAAoBF,MAAM,CAACG,OAA3B,EACA,GAAMC,CAAAA,QAAQ,gCAAOL,KAAP,MAAcJ,QAAQ,CAAEK,MAAM,CAACG,OAA/B,EAAd,CACA,MAAOC,CAAAA,QAAP,CAEJ,IAAK,cAAL,CACA,GAAMC,CAAAA,SAAS,gCACRN,KADQ,MAEXH,YAAY,8BAAMG,KAAK,CAACH,YAAZ,GAA0BI,MAAM,CAACG,OAAjC,EAFD,EAAf,CAIA,MAAOE,CAAAA,SAAP,CAEA,QAAS,MAAON,CAAAA,KAAP,CAbb,CAmBH,CApBD","sourcesContent":["import i18n from 'i18next';\nexport interface LanguageState {\n    language:\"en\" | \"zh\",\n    languageList: {name: string, code: string}[]\n}\nconst defaultState: LanguageState = {\n    language: \"en\",\n    languageList: [\n        {name:\"中文\", code:\"zh\"},\n        {name:\"English\", code:\"en\"}\n    ]\n    \n}\nexport default (state = defaultState , action )=> {\n    switch (action.type) {\n        case \"change_language\":\n            i18n.changeLanguage(action.payload);\n            const newState = {...state, language: action.payload};\n            return newState;\n\n        case \"add_language\":\n        const newState2 = {\n            ...state, \n            languageList: [...state.languageList, action.payload],\n         };\n        return newState2;\n\n        default: return state;\n\n    }\n    \n    \n    \n}"]},"metadata":{},"sourceType":"module"}