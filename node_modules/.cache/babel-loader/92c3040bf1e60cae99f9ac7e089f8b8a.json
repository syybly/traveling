{"ast":null,"code":"import _toConsumableArray from\"/Users/melony/Desktop/react-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import languageReducer from'./language/languageReducer';import recommendProductsReducer from\"./recommendProducts/recommendProductsReducer\";import{actionLog}from\"./middlewares/actionLog\";import{ProductDetailSlice}from'./productDetail/slice';import{ProductSearchSlice}from\"./productSearch/slice\";import{combineReducers,configureStore}from'@reduxjs/toolkit';import{UserSlice}from'./user/slice';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import{ShoppingCartSlice}from'./shoppingCart/slice';import{PlaceOrderSlice}from'./order/slice';var persistConfig={key:\"root\",storage:storage,whitelist:[\"user\"]};var rootReducer=combineReducers({language:languageReducer,recommendProducts:recommendProductsReducer,productDetail:ProductDetailSlice.reducer,productSearch:ProductSearchSlice.reducer,user:UserSlice.reducer,shoppingCart:ShoppingCartSlice.reducer,order:PlaceOrderSlice.reducer});var persistedReducer=persistReducer(persistConfig,rootReducer);//const store = createStore(rootReducer, applyMiddleware(thunk,actionLog));\nvar store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return[].concat(_toConsumableArray(getDefaultMiddleware()),[actionLog]);},devTools:true});var persistor=persistStore(store);export default{store:store,persistor:persistor};","map":{"version":3,"sources":["/Users/melony/Desktop/react-travel/src/redux/store.ts"],"names":["languageReducer","recommendProductsReducer","actionLog","ProductDetailSlice","ProductSearchSlice","combineReducers","configureStore","UserSlice","persistStore","persistReducer","storage","ShoppingCartSlice","PlaceOrderSlice","persistConfig","key","whitelist","rootReducer","language","recommendProducts","productDetail","reducer","productSearch","user","shoppingCart","order","persistedReducer","store","middleware","getDefaultMiddleware","devTools","persistor"],"mappings":"iKACA,MAAOA,CAAAA,eAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,wBAAP,KAAqC,8CAArC,CAEA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,OAASC,eAAT,CAA0BC,cAA1B,KAAgD,kBAAhD,CACA,OAASC,SAAT,KAA0B,cAA1B,CAEA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,iBAAT,KAA8F,sBAA9F,CACA,OAAQC,eAAR,KAA8B,eAA9B,CACA,GAAMC,CAAAA,aAAa,CAAE,CACjBC,GAAG,CAAE,MADY,CAEjBJ,OAAO,CAAPA,OAFiB,CAGjBK,SAAS,CAAE,CAAC,MAAD,CAHM,CAArB,CAMA,GAAMC,CAAAA,WAAW,CAAGX,eAAe,CAAC,CAChCY,QAAQ,CAACjB,eADuB,CAEhCkB,iBAAiB,CAAEjB,wBAFa,CAGhCkB,aAAa,CAAEhB,kBAAkB,CAACiB,OAHF,CAIhCC,aAAa,CAAEjB,kBAAkB,CAACgB,OAJF,CAKhCE,IAAI,CAAEf,SAAS,CAACa,OALgB,CAMhCG,YAAY,CAAEZ,iBAAiB,CAACS,OANA,CAOhCI,KAAK,CAAEZ,eAAe,CAACQ,OAPS,CAAD,CAAnC,CAUA,GAAMK,CAAAA,gBAAgB,CAAGhB,cAAc,CAACI,aAAD,CAAeG,WAAf,CAAvC,CACA;AACA,GAAMU,CAAAA,KAAK,CAAEpB,cAAc,CAAC,CACxBc,OAAO,CAAEK,gBADe,CAExBE,UAAU,CAAE,oBAACC,oBAAD,qCACJA,oBAAoB,EADhB,GACmB1B,SADnB,IAFY,CAKxB2B,QAAQ,CAAC,IALe,CAAD,CAA3B,CAQA,GAAMC,CAAAA,SAAS,CAAGtB,YAAY,CAACkB,KAAD,CAA9B,CAEA,cAAe,CAACA,KAAK,CAALA,KAAD,CAAQI,SAAS,CAATA,SAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport languageReducer from  './language/languageReducer';\nimport recommendProductsReducer from \"./recommendProducts/recommendProductsReducer\";\nimport thunk from 'redux-thunk';\nimport { actionLog } from \"./middlewares/actionLog\";\nimport { ProductDetailSlice } from './productDetail/slice';\nimport { ProductSearchSlice } from \"./productSearch/slice\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { UserSlice } from './user/slice'\nimport { useDispatch } from \"react-redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { ShoppingCartSlice, getShoppingCart, addShoppingCartItem, clearShoppingCartItem} from './shoppingCart/slice';\nimport {PlaceOrderSlice} from './order/slice';\nconst persistConfig ={\n    key: \"root\",\n    storage,\n    whitelist: [\"user\"]\n\n}\nconst rootReducer = combineReducers({\n    language:languageReducer,\n    recommendProducts: recommendProductsReducer,\n    productDetail: ProductDetailSlice.reducer,\n    productSearch: ProductSearchSlice.reducer,\n    user: UserSlice.reducer,\n    shoppingCart: ShoppingCartSlice.reducer,\n    order: PlaceOrderSlice.reducer\n});\n\nconst persistedReducer = persistReducer(persistConfig,rootReducer);\n//const store = createStore(rootReducer, applyMiddleware(thunk,actionLog));\nconst store= configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => \n        [...getDefaultMiddleware(),actionLog]\n    ,\n    devTools:true\n})\n\nconst persistor = persistStore(store);\nexport type RootState = ReturnType <typeof store.getState>\nexport default {store, persistor} ;"]},"metadata":{},"sourceType":"module"}